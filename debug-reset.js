import { DeploymentManagerFactory } from "./src/contexts/website/services/deployment/deploymentManager.ts"; import { LocalDevDeploymentManager } from "./src/contexts/website/services/deployment/localDevDeploymentManager.ts"; import { CaddyDeploymentManager } from "./src/contexts/website/services/deployment/caddyDeploymentManager.ts"; DeploymentManagerFactory.resetInstance(); const factory = DeploymentManagerFactory.getInstance(); console.log("Initial factory class:", factory.selectDeploymentManager("local-dev").name); console.log("Initial deployment manager:", factory.create({ deploymentType: "local-dev" }).constructor.name); DeploymentManagerFactory.resetInstance(); const factory2 = DeploymentManagerFactory.getInstance(); console.log("Factory after reset:", factory2.selectDeploymentManager("local-dev").name); factory2.setDeploymentManagerClass(CaddyDeploymentManager); console.log("Manager after explicitly setting Caddy:", factory2.create({}).constructor.name); console.log("Manager with local-dev after explicitly setting Caddy:", factory2.create({ deploymentType: "local-dev" }).constructor.name);
