---
// Process.astro - Work process section for landing page
interface Props {
  process: {
    title: string;
    introduction?: string;
    steps: Array<{
      step: number;
      title: string;
      description: string;
    }>;
    enabled: boolean;
  };
}

const { process } = Astro.props;

// Don't render if section is disabled
if (!process.enabled) return null;
---

<section class="py-20 px-6 md:px-10 lg:px-16 bg-white dark:bg-gray-800">
  <div class="container mx-auto max-w-6xl">
    <div class="text-center mb-16">
      <h2 class="text-3xl md:text-4xl font-bold mb-6 text-gray-900 dark:text-white">
        {process.title}
      </h2>
      
      {process.introduction && (
        <p class="text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto">
          {process.introduction}
        </p>
      )}
    </div>
    
    <div class="relative">
      <!-- Connector line for desktop -->
      <div class="hidden md:block absolute top-1/2 left-0 w-full h-0.5 bg-blue-200 dark:bg-blue-900 -translate-y-1/2 z-0"></div>
      
      <div class="grid grid-cols-1 md:grid-cols-3 gap-12 relative z-10">
        {process.steps.map((step, index) => (
          <div class="bg-white dark:bg-gray-900 p-6 rounded-lg shadow-md border border-gray-100 dark:border-gray-700 relative">
            <div class="flex justify-center md:justify-start">
              <div class="w-12 h-12 rounded-full bg-blue-600 text-white flex items-center justify-center text-xl font-bold mb-4">
                {step.step}
              </div>
            </div>
            
            <h3 class="text-xl font-bold mb-3 text-center md:text-left text-gray-900 dark:text-white">
              {step.title}
            </h3>
            
            <p class="text-gray-600 dark:text-gray-300">
              {step.description}
            </p>
          </div>
        ))}
      </div>
    </div>
  </div>
</section>