---
import { getEntry } from 'astro:content';
import MainLayout from '../layouts/MainLayout.astro';

// Section components
import Hero from '../components/sections/Hero.astro';
import ProblemStatement from '../components/sections/ProblemStatement.astro';
import Services from '../components/sections/Services.astro';
import Process from '../components/sections/Process.astro';
import CaseStudies from '../components/sections/CaseStudies.astro';
import Expertise from '../components/sections/Expertise.astro';
import About from '../components/sections/About.astro';
import Pricing from '../components/sections/Pricing.astro';
import Faq from '../components/sections/Faq.astro';
import Cta from '../components/sections/Cta.astro';
import Footer from '../components/sections/Footer.astro';

// Get the landing page data from the content collection
// This is populated by the LandingPageGenerationService when it runs
const profile = await getEntry('landingPage', 'profile');

const { 
  title, 
  description, 
  name, 
  tagline,
  sectionOrder = [],
  hero,
  problemStatement,
  services,
  process,
  caseStudies,
  expertise,
  about,
  pricing,
  faq,
  cta,
  footer
} = profile.data;

// Each component will check its own enabled flag

// Font Awesome for icons
const useFontAwesome = 
  (footer?.contactDetails?.social && footer.contactDetails.social.length > 0) || 
  (services?.items.some(item => item.icon));

// Meta title should use the landing page title if available
const metaTitle = title || `${name} - ${tagline}`;
const metaDescription = description || `Professional website for ${name} - ${tagline}`;
---

<MainLayout title={metaTitle} description={metaDescription}>
  <!-- Load Font Awesome if needed -->
  <!-- {useFontAwesome && ( -->
  <!--   <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" /> -->
  <!-- )} -->
  
  <!-- Render sections according to sectionOrder -->
  {sectionOrder.map(section => {
    switch(section) {
      case 'hero':
        return <Hero hero={hero} />;
      case 'problemStatement':
        return <ProblemStatement problemStatement={problemStatement} />;
      case 'services':
        return <Services services={services} />;
      case 'process':
        return <Process process={process} />;
      case 'caseStudies':
        return <CaseStudies caseStudies={caseStudies} />;
      case 'expertise':
        return <Expertise expertise={expertise} />;
      case 'about':
        return <About about={about} />;
      case 'pricing':
        return <Pricing pricing={pricing} />;
      case 'faq':
        return <Faq faq={faq} />;
      case 'cta':
        return <Cta cta={cta} />;
      case 'footer':
        return <Footer footer={footer} />;
      default:
        return null;
    }
  })}
</MainLayout>
