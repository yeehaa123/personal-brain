---
import { getEntry } from 'astro:content';
import MainLayout from '../layouts/MainLayout.astro';

// Section components
import Hero from '../components/sections/Hero.astro';
import ProblemStatement from '../components/sections/ProblemStatement.astro';
import Services from '../components/sections/Services.astro';
import Process from '../components/sections/Process.astro';
import Testimonials from '../components/sections/Testimonials.astro';
import Expertise from '../components/sections/Expertise.astro';
import About from '../components/sections/About.astro';
import Faq from '../components/sections/Faq.astro';
import Cta from '../components/sections/Cta.astro';
import Footer from '../components/sections/Footer.astro';

// Get the landing page data from the content collection
// This is populated by the LandingPageGenerationService when it runs
const profile = await getEntry('landingPage', 'profile');

const { 
  title, 
  description, 
  name, 
  tagline,
  sectionOrder = [],
  hero,
  problemStatement,
  services,
  process,
  testimonials,
  expertise,
  about,
  faq,
  cta,
  footer
} = profile.data;

// Map section names to their components for dynamic rendering
const sectionComponents = {
  hero: hero && <Hero hero={hero} />,
  problemStatement: problemStatement?.enabled && <ProblemStatement problemStatement={problemStatement} />,
  services: services && <Services services={services} />,
  process: process?.enabled && <Process process={process} />,
  testimonials: testimonials?.enabled && <Testimonials testimonials={testimonials} />,
  expertise: expertise?.enabled && <Expertise expertise={expertise} />,
  about: about?.enabled && <About about={about} />,
  faq: faq?.enabled && <Faq faq={faq} />,
  cta: cta?.enabled && <Cta cta={cta} />,
  footer: footer?.enabled && <Footer footer={footer} />
};

// Font Awesome for icons
const useFontAwesome = 
  (footer?.contactDetails?.social && footer.contactDetails.social.length > 0) || 
  (services?.items.some(item => item.icon));

// Meta title should use the landing page title if available
const metaTitle = title || `${name} - ${tagline}`;
const metaDescription = description || `Professional website for ${name} - ${tagline}`;
---

<MainLayout title={metaTitle} description={metaDescription}>
  <!-- Load Font Awesome if needed -->
  {useFontAwesome && (
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
  )}
  
  <!-- Render sections according to sectionOrder -->
  {sectionOrder.map(section => sectionComponents[section])}
</MainLayout>